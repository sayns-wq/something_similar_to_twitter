{"version":3,"sources":["reportWebVitals.js","components/app-header/app-header.js","components/search-panel/search-panel.js","components/post-status-filter/post-status-filter.js","components/post-list-item/post-list-item.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","clazz","filter","onClick","onFilterSelect","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","console","log","PostList","posts","elements","item","id","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","index","findIndex","elem","before","slice","after","body","newItem","old","items","terms","length","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e773e06c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport './app-header.css'\r\nconst AppHeader = ({liked, allPosts}) =>{\r\n    return(\r\n        <div className = 'app-header d-flex'>\r\n            <h1>Vladimir Grishchenko</h1>\r\n            <h2>{allPosts} записей, из них понравилось {liked}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader","import React, {Component}from 'react'\r\nimport './search-panel.css'\r\nclass SearchPanel extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n    onUpdateSearch(e){\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term)\r\n    }\r\n    render(){\r\n        return(\r\n            <input\r\n            className = 'form-control search-input'\r\n            type = 'text'\r\n            placeholder = 'Поиск по записям'\r\n            onChange = {this.onUpdateSearch}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchPanel;","import React, {Component} from 'react'\r\nimport './post-status-filter.css'\r\nclass PostStatusFilter extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.buttons = [\r\n      {name: 'all',label:'Все'},\r\n      {name: 'like',label:'Понравилось'}\r\n    ]\r\n  }\r\n\r\n  render(){\r\n    const buttons = this.buttons.map(({name, label}) => {\r\n      const active = this.props.filter === name;\r\n      const clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n      return(\r\n        <button key={name}\r\n        type ='button' \r\n        className = {`btn ${clazz}`}\r\n        onClick = {() => this.props.onFilterSelect(name)}>{label}</button>\r\n      )\r\n    })\r\n    return(\r\n      <div className ='btn-group'>\r\n        {buttons}\r\n      </div>\r\n        )\r\n  }\r\n}\r\n\r\nexport default PostStatusFilter;","import React , {Component} from 'react'\r\nimport './post-list-item.css'\r\n\r\nclass PostListItem extends Component{\r\n  \r\n  \r\n\r\n    render() {\r\n        const {label,onDelete,onToggleImportant,onToggleLiked,important,like} = this.props;\r\n        \r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n        if(important){\r\n            classNames += ' important';\r\n        }\r\n        if(like){\r\n            classNames += ' like';\r\n            console.log('like')\r\n        }\r\n        return(\r\n            <div className = {classNames}>\r\n            <span className='app-list-item-label'\r\n            onClick ={onToggleLiked}>\r\n                {label}\r\n            </span>\r\n            <div className ='d-flex justify-content-center align-items-center'>\r\n             <button \r\n                 type = 'button'\r\n                 className ='btn-star btn-sm'\r\n                 onClick = {onToggleImportant}>\r\n                 <i className ='fa fa-star'></i>\r\n             </button>\r\n             <button \r\n                 type = 'button'\r\n                 className ='btn-trash btn-sm'\r\n                 onClick = {onDelete}>\r\n                 <i className ='fa fa-trash-o'></i>\r\n             </button>\r\n \r\n             <i className ='fa fa-heart'></i>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostListItem","import React from 'react'\r\nimport PostListItem from '../post-list-item/post-list-item'\r\nimport './post-list.css'\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) =>{\r\n    const elements = posts.map((item)=> {\r\n        return(\r\n            <li key={item.id} className = 'list-group-item'>\r\n            <PostListItem \r\n            label = {item.label}\r\n            important = {item.important}\r\n            like = {item.like}\r\n            onDelete = {() => {\r\n               onDelete(item.id);\r\n            }}\r\n            onToggleImportant = {() => {\r\n                onToggleImportant(item.id);\r\n            }}\r\n            onToggleLiked = {() => {\r\n                onToggleLiked(item.id);\r\n            }}/>\r\n            </li>\r\n        )\r\n    })\r\n    return(\r\n       <ul className ='app-list list-group'>\r\n        {elements}\r\n       </ul>\r\n    )\r\n}\r\n\r\nexport default PostList","import React, {Component}from 'react'\r\nimport './post-add-form.css'\r\n\r\nclass PostAddForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            text : ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onValueChange(e){\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        })\r\n    }\r\n\r\n    render(){\r\n    return(\r\n        <form \r\n        className = 'bottom-panel d-flex'\r\n        onSubmit = {this.onSubmit}>\r\n            <input\r\n                type = 'text'\r\n                placeholder ='О чем Вы дуиаете сейчас'\r\n                className = 'form-control new-post-label'\r\n                onChange = {this.onValueChange}\r\n                value = {this.state.text}/>\r\n                <button\r\n                    type = 'submit'\r\n                    className ='btn btn-outline-secondary'\r\n                    >\r\n                    Добавить\r\n                </button>\r\n        </form>\r\n    )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default PostAddForm","import App from './app'\r\nexport default App","import React, {Component} from 'react'\r\nimport AppHeader from '../app-header/app-header'\r\nimport SearchPanel from '../search-panel/search-panel'\r\nimport PostStatusFilter from '../post-status-filter/post-status-filter'\r\nimport PostList from '../post-list/post-list'\r\nimport PostAddForm from '../post-add-form/post-add-form'\r\nimport './app.css'\r\nclass App extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n             data : [\r\n                {label: 'Going to relern react', important: true, like: false, id:1},\r\n                {label: 'This is so good', important: false, like: false, id:2},\r\n                {label: 'I need breack', important: false, like: false, id:3}\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n        this.maxId = 4;\r\n    }\r\n    deleteItem(id){\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id)\r\n           const before = data.slice(0, index);\r\n           const after = data.slice(index+1);\r\n\r\n           const newArray =[...before, ...after];\r\n           \r\n           return {\r\n               data:newArray\r\n           }\r\n        })\r\n    }\r\n    addItem(body) {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id:this.maxId++\r\n        }\r\n        this.setState(({data}) => {\r\n            const newArray = [...data, newItem];\r\n            return{\r\n                data : newArray\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleImportant(id){\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id ===id);\r\n\r\n            const old = data[index];\r\n            const newItem ={...old, important: !old.important};\r\n            const before = data.slice(0, index);\r\n           const after = data.slice(index+1);\r\n\r\n           const newArray =[...before, newItem, ...after];\r\n           return{\r\n            data : newArray\r\n           }\r\n        })\r\n\r\n    }\r\n    onToggleLiked(id){\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id ===id);\r\n\r\n            const old = data[index];\r\n            const newItem ={...old, like: !old.like};\r\n            const before = data.slice(0, index);\r\n           const after = data.slice(index+1);\r\n\r\n           const newArray =[...before, newItem, ...after];\r\n           return{\r\n            data : newArray\r\n        }\r\n        })\r\n    }\r\n\r\n    searchPost(items, terms){\r\n        if(terms.length === 0){\r\n            return items\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(terms) > -1\r\n        })\r\n    }\r\n\r\n    onUpdateSearch(term){\r\n        this.setState({term})\r\n    }\r\n\r\n    filterPost(items, filter){\r\n        if(filter === 'like'){\r\n            return items.filter(item => item.like)\r\n        }else{\r\n            return items\r\n        }\r\n    }\r\n    onFilterSelect(filter){\r\n        this.setState({filter})\r\n    }\r\n    render() {\r\n\r\n        const liked = this.state.data.filter(item => item.like).length;\r\n        const allPosts = this.state.data.length;\r\n        const visiblePosts = this.filterPost(this.searchPost(this.state.data, this.state.term), this.state.filter);\r\n        return(\r\n            <div className='app'>\r\n                <AppHeader\r\n                liked = {liked}\r\n                allPosts = {allPosts}/>\r\n                <div className = 'search-panel d-flex'>\r\n                <SearchPanel\r\n                onUpdateSearch ={this.onUpdateSearch}/>\r\n                <PostStatusFilter filter = {this.state.filter}\r\n                onFilterSelect = {this.onFilterSelect}/>\r\n                </div>\r\n                <PostList \r\n                posts = {visiblePosts}\r\n                onDelete = {this.deleteItem}\r\n                onToggleImportant = {this.onToggleImportant}\r\n                onToggleLiked = {this.onToggleLiked}\r\n                like = {this.state.data.like}\r\n                important = {this.state.data.important}/>\r\n                <PostAddForm\r\n                onAdd = {this.addItem}/>\r\n            </div>\r\n            )\r\n    }\r\n     \r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport App from './components/app/index'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}